
ifndef platform
  platform=linux
endif

ifeq ($(platform),linux)

  ifndef GCC
    GCC :=gcc
  endif

  ifndef GPP
    GPP :=g++
  endif

  ifndef AR
    AR  :=ar
  endif
  BINFOLDER:=./obj-linux/
endif

ifeq ($(platform),windows)
 ifndef GCC
    GCC :=x86_64-w64-mingw32-gcc
  endif

  ifndef GPP
    GPP :=x86_64-w64-mingw32-g++
  endif

  ifndef AR
    AR  :=x86_64-w64-mingw32-ar
  endif
  
  BINFOLDER:=../obj-win/
endif



CPP_FLAGS:= -Wall
CC_FLAGS := -Wall
#Опция c arname - создать архив, если архив с именем arname не существует он будет создан, в противном случае файлы будут добавлены к имеющемуся архиву.
#Опция r - задает режим обновления архива, если в архиве файл с указанным именем уже существует, он будет удален, а новый файл дописан в конец архива.
#Опция s - добавляет (обновляет) индекс архива. В данном случае индекс архива это таблица, в которой для каждого определенного в архивируемых файлах символического имени (имени функции или блока данных) сопоставлено соответствующее ему имя объектного файла. Индекс архива необходим для ускорения работы с библиотекой - для того чтобы найти нужное определение, отпадает необходимость просматривать таблицы символов всех файлов архива, можно сразу перейти к файлу, содержащему искомое имя. Просмотреть индекс архива можно с помощью уже знакомой утилиты nm воспользовавшись её опцией -s (так же будут показаны таблицы символов всех объектных файлов архива):
AR_FLAGS := crs 


#-----------------------------------------------
#-----------  Исходники Си  --------------------
#-----------------------------------------------
C_SRC:= u_server.c
C_SRC+= u_network.c

C_INC:= -I../inc/server

OBJECTS_C=$(C_SRC:.c=.o)

#-- Правило для построения run файла --

../libu_net.a: $(OBJECTS_C)
	$(AR) $(AR_FLAGS) ../libu_net.a  $(addprefix $(BINFOLDER), $(OBJECTS_C))

#-------------------------------
#-- Правило для компиляции Си --
#-------------------------------


.c.o:	$(C_SRC)
	$(GCC) -c $<  $(FOLDERS) $(CC_FLAGS) $(C_INC) -o $(BINFOLDER)$@



clean:
	rm $(BINFOLDER)* ../libu_net.a
